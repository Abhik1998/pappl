.TH pappl-log 3 "Documentation" "2020-10-22" "Documentation"
.SH NAME
pappl-log \- Documentation
.SH ENUMERATIONS
.SS pappl_loglevel_e
Log levels
.TP 5
PAPPL_LOGLEVEL_DEBUG
.br
Debug message
.TP 5
PAPPL_LOGLEVEL_ERROR
.br
Error message
.TP 5
PAPPL_LOGLEVEL_FATAL
.br
Fatal message
.TP 5
PAPPL_LOGLEVEL_INFO
.br
Informational message
.TP 5
PAPPL_LOGLEVEL_UNSPEC
.br
Not specified
.TP 5
PAPPL_LOGLEVEL_WARN
.br
Warning message
.SH FUNCTIONS
.SS papplLog
Log a message for the system.
.PP
.nf
void papplLog (
    pappl_system_t *system,
    pappl_loglevel_t level,
    const char *message,
    ...
);
.fi
.PP
This function sends a message to the system's log file.  The "level" argument
specifies the urgency of the message:
.PP
.IP \(bu 5
\fBPAPPL_LOGLEVEL_DEBUG\fR: A debugging message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_ERROR\fR: An error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_FATAL\fR: A fatal error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_INFO\fR: An informational message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_WARN\fR: A warning message.
.PP
The "message" argument specifies a \fBprintf\fR-style format string.  Values
logged using the "%c" and "%s" format specifiers are sanitized to not
contain control characters.
.SS papplLogClient
Log a message for a client.
.PP
.nf
void papplLogClient (
    pappl_client_t *client,
    pappl_loglevel_t level,
    const char *message,
    ...
);
.fi
.PP
This function sends a client message to the system's log file.  The "level"
argument specifies the urgency of the message:
.PP
.IP \(bu 5
\fBPAPPL_LOGLEVEL_DEBUG\fR: A debugging message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_ERROR\fR: An error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_FATAL\fR: A fatal error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_INFO\fR: An informational message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_WARN\fR: A warning message.
.PP
The "message" argument specifies a \fBprintf\fR-style format string.  Values
logged using the "%c" and "%s" format specifiers are sanitized to not
contain control characters.
.SS papplLogDevice
Log a device error for the system...
.PP
.nf
void papplLogDevice (
    const char *message,
    void *data
);
.fi
.PP
This function sends a device error message to the system's log file.
.SS papplLogJob
Log a message for a job.
.PP
.nf
void papplLogJob (
    pappl_job_t *job,
    pappl_loglevel_t level,
    const char *message,
    ...
);
.fi
.PP
This function sends a job message to the system's log file.  The "level"
argument specifies the urgency of the message:
.PP
.IP \(bu 5
\fBPAPPL_LOGLEVEL_DEBUG\fR: A debugging message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_ERROR\fR: An error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_FATAL\fR: A fatal error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_INFO\fR: An informational message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_WARN\fR: A warning message.
.PP
The "message" argument specifies a \fBprintf\fR-style format string.  Values
logged using the "%c" and "%s" format specifiers are sanitized to not
contain control characters.
.SS papplLogPrinter
Log a message for a printer.
.PP
.nf
void papplLogPrinter (
    pappl_printer_t *printer,
    pappl_loglevel_t level,
    const char *message,
    ...
);
.fi
.PP
This function sends a printer message to the system's log file.  The "level"
argument specifies the urgency of the message:
.PP
.IP \(bu 5
\fBPAPPL_LOGLEVEL_DEBUG\fR: A debugging message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_ERROR\fR: An error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_FATAL\fR: A fatal error message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_INFO\fR: An informational message.
.IP \(bu 5
\fBPAPPL_LOGLEVEL_WARN\fR: A warning message.
.PP
The "message" argument specifies a \fBprintf\fR-style format string.  Values
logged using the "%c" and "%s" format specifiers are sanitized to not
contain control characters.
.SH TYPES
.SS pappl_logfunc_t
Functions...
.PP
.nf
typedef void (*pappl_logfunc_t)(void *data, pappl_loglevel_t level, const char *message);
.fi
.SS pappl_loglevel_t
Log levels
.PP
.nf
typedef enum pappl_loglevel_e pappl_loglevel_t;
.fi
.SH AUTHOR
.PP
Michael R Sweet
.SH COPYRIGHT
.PP
Copyright (c) 2020 by Michael R Sweet
